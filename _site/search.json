[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Resume\nGoogle Scholar Profile"
  },
  {
    "objectID": "about.html#publications",
    "href": "about.html#publications",
    "title": "About",
    "section": "Publications",
    "text": "Publications\nGoogle Scholar Profile"
  },
  {
    "objectID": "posts/tufte_rangeplot/tufte_rangeplot.html",
    "href": "posts/tufte_rangeplot/tufte_rangeplot.html",
    "title": "Rangeplot in Altair",
    "section": "",
    "text": "Edward Tufte suggests to visually indicate the location of the max and min values in a scatterplot with the lines that demark the x- and y-axis of the plot. He calls this a rangeplot. This post shows how to create a such a plot in Altair 5.\nFirst, we create a random dataset.\n\nimport numpy as np\nimport pandas as pd\n\ndf = pd.DataFrame({\n    'x': np.random.randn(100),\n    'y': np.random.randn(100),\n    'category': np.random.randint(0, 2, 100),\n})\n\nThen, we create a scatterplot and adjust the axes as recommended by Tufte. We remove grids and ticks, as is common in Tufte-style plots. As Altair’s default font size is rather small, we increase it.\n\nimport altair as alt\n\nalt.Chart(df, title=\"Rangeplot\").mark_point(filled=True).encode(\n    alt.X('x',\n      axis=alt.Axis(\n          offset=40, \n          grid=False, \n          ticks=False, \n          labelFontSize=12,\n          titleFontSize=16\n      ),\n      scale=alt.Scale(domain=[df.x.min(), df.x.max()], nice=False)\n    ),\n    alt.Y('y',\n      axis=alt.Axis(\n          offset=40, \n          grid=False, \n          ticks=False, \n          labelFontSize=12,\n          titleFontSize=16\n      ),\n      scale=alt.Scale(domain=[df.y.min(), df.y.max()], nice=False)\n    ),\n    color=alt.Color('category:N')\n).configure_view(\n    stroke=None,\n)\n\n\n\n\n\n\n\nThis was quite some styling for a single plot. To simplify this in the future, we can make our lives easier by\n\nFactoring out the min_max_scale.\nCreating a custom theme following Tufte’s advice on style. In addition we’ll use a font is similar to fonts he regularly uses.\n\n\n\nfrom altair import theme\n\n@theme.register('tufte', enable=True)\ndef tufte():\n    font = \"Georgia\"\n    return {\n        'config': {\n            \"title\": {\n                'font': font,\n                'fontSize': 24\n            },\n            \"background\": None,\n            'view': {\n                'stroke': None,\n                'height': 300,\n                'width': 400,\n            },\n            'mark': {'filled': True,},\n            'axis': {\n                'labelFontSize': 14,\n                'titleFontSize': 18,\n                'offset': 40,\n                'grid': False,\n                'ticks': False,\n                'labelFont': font,\n                'titleFont': font\n            },\n            'legend': { \n                'titleFont': font,\n                'labelFont': font,\n                'titleFontSize': 14,\n                'labelFontSize': 12\n            },\n            'scale': {\n                'nice': False\n            }\n        }\n    }\n\n\nmin_max_scale = lambda df, col: Scale(domain=[df[col].min(), df[col].max()])\n\nfrom altair import Chart, X, Y, Color, Scale, theme\n\nChart(df, title=\"Rangeplot\").mark_point().encode(\n    X('x', scale=min_max_scale(df, 'x')),\n    Y('y', scale=min_max_scale(df, 'y')),\n    color=Color('category:N'),\n)"
  },
  {
    "objectID": "posts/tufte_sidenote.html",
    "href": "posts/tufte_sidenote.html",
    "title": "Sidenotes for Quarto",
    "section": "",
    "text": "In his books Edward Tufte heavily annotates his text with sidenotes at the margin. I enjoy this style of writing very much. Markdown and Quarto don’t have a native way to support sidenotes, so let’s try to implement it!\nFastHTML is a new Python library from Answer.AI that makes it easy to generate blocks of HTML. Below is an example that builds a group of html tags that match well to Tufte CSS by Dave Liepmann.\n\nfrom fasthtml.common import Label, Input, Span, FT\nfrom fasthtml.common import *\n\ndef sidenote(ct, _id=None):\n    _id = _id or f\"sn{str(hash(str(ct)))[:6]}\"\n    c = (\n        Label(cls='margin-toggle sidenote-number', **{'for': _id}),\n        Input(type='checkbox', id=_id, cls='margin-toggle'),\n        Span(*ct, cls='sidenote')\n    )\n    return \"\".join(x.__html__() for x in c)\n\nprint(sidenote('i am a sidenote'))\n\n&lt;label for=\"sn-36715\" class=\"margin-toggle sidenote-number\"&gt;&lt;/label&gt;&lt;input type=\"checkbox\" id=\"sn-36715\" class=\"margin-toggle\" name=\"sn-36715\"&gt;\n&lt;span class=\"sidenote\"&gt;i am a sidenote&lt;/span&gt;\n\n\nHow can we use this function now inside our Markdown blog? Quarto can render functions but the way Claude recommended was not particularly convenient. What we can do instead is to generate a full html string and output that asis - this will be rendered nicely by Quarto. We need to prepend the code cell that uses this with the following so that Quarto understands what we want.\n#| echo: true\n#| output: asis\n\ndef html(md):\n    _html = \"{=html}\"\n    print(f\"\"\"```{_html}\\n{md}```\"\"\")\n\nhtml(f\"\"\"\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \nUt enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \nExcepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum\n\nThis is a second test for a sidenote.{sidenote('I am the postman! I am the walrus! I am the sidenote! Ta da da da.')}\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit, \nsed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \nUt enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \nExcepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum\n\"\"\")\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \nUt enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \nExcepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum\n\nThis is a second test for a sidenote.\nI am the postman! I am the walrus! I am the sidenote! Ta da da da.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit, \nsed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \nUt enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \nExcepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Home",
    "section": "",
    "text": "Sidenotes for Quarto\n\n\n\n\n\n\n\n\n\n\n\nMar 19, 2025\n\n\n\n\n\n\n\nRangeplot in Altair\n\n\n\n\n\n\n\n\n\n\n\nFeb 7, 2025\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html#resume",
    "href": "about.html#resume",
    "title": "About",
    "section": "",
    "text": "Resume"
  }
]